// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"context"
	"github.com/google/wire"
	"github.com/mfmahendr/url-shortener-backend/config"
	"github.com/mfmahendr/url-shortener-backend/internal/controllers"
	"github.com/mfmahendr/url-shortener-backend/internal/middleware"
	"github.com/mfmahendr/url-shortener-backend/internal/services/firestore"
	"github.com/mfmahendr/url-shortener-backend/internal/services/url_service"
)

// Injectors from wire.go:

func InitializeController(ctx context.Context) (*controllers.URLController, error) {
	app := config.InitFirebase(ctx)
	firestoreService, err := firestore_service.New(ctx, app)
	if err != nil {
		return nil, err
	}
	urlService := url_service.New(firestoreService)
	urlController := controllers.New(urlService)
	return urlController, nil
}

func InitializeAuthMiddleware(ctx context.Context) (*middleware.AuthMiddleware, error) {
	app := config.InitFirebase(ctx)
	authMiddleware, err := middleware.NewAuthMiddleware(app)
	if err != nil {
		return nil, err
	}
	return authMiddleware, nil
}

// wire.go:

var firebaseAppSet = wire.NewSet(config.InitFirebase)
